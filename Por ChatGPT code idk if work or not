let distanceFront = 0
let distanceLeft = 0
let distanceRight = 0
let Speed = 100

function Forward() {
    motor.MotorRun(motor.Motors.M1, motor.Dir.CW, Speed)
    motor.MotorRun(motor.Motors.M2, motor.Dir.CW, Speed)
    motor.MotorRun(motor.Motors.M3, motor.Dir.CW, Speed)
    motor.MotorRun(motor.Motors.M4, motor.Dir.CW, Speed)
}

function Backward() {
    motor.MotorRun(motor.Motors.M1, motor.Dir.CCW, Speed)
    motor.MotorRun(motor.Motors.M2, motor.Dir.CCW, Speed)
    motor.MotorRun(motor.Motors.M3, motor.Dir.CCW, Speed)
    motor.MotorRun(motor.Motors.M4, motor.Dir.CCW, Speed)
}

function Left() {
    motor.MotorRun(motor.Motors.M1, motor.Dir.CCW, Speed)
    motor.MotorRun(motor.Motors.M2, motor.Dir.CW, Speed)
    motor.MotorRun(motor.Motors.M3, motor.Dir.CCW, Speed)
    motor.MotorRun(motor.Motors.M4, motor.Dir.CW, Speed)
}

function Right() {
    motor.MotorRun(motor.Motors.M1, motor.Dir.CW, Speed)
    motor.MotorRun(motor.Motors.M2, motor.Dir.CCW, Speed)
    motor.MotorRun(motor.Motors.M3, motor.Dir.CW, Speed)
    motor.MotorRun(motor.Motors.M4, motor.Dir.CCW, Speed)
}

function Stop() {
    motor.MotorStopAll()
}

basic.forever(function () {
    distanceFront = sonar.ping(DigitalPin.P0, DigitalPin.P1, PingUnit.Centimeters)
    distanceLeft = sonar.ping(DigitalPin.P2, DigitalPin.P8, PingUnit.Centimeters)
    distanceRight = sonar.ping(DigitalPin.P12, DigitalPin.P13, PingUnit.Centimeters)

    if (distanceFront <= 20 && distanceLeft <= 20 && distanceRight > 20) {
        Left()
        basic.pause(500)
        Stop()
    } 
    else if (distanceFront <= 20 && distanceRight <= 20 && distanceLeft > 20) {
        Right()
        basic.pause(500)
        Stop()
    } 
    else if (distanceLeft <= 20 && distanceRight <= 20 && distanceFront > 20) {
        Forward()
        basic.pause(500)
        Stop()
    } 
    else {
        Forward()
    }
})
